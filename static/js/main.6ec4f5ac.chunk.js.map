{"version":3,"sources":["win.ogg","helpers.js","state.js","Board.jsx","Congrats.jsx","Controls.jsx","App.jsx","index.js"],"names":["module","exports","clone","arr","JSON","parse","stringify","find","n","row","findIndex","indexOf","move","tiles","targetTile","emptyTileRow","emptyTileCol","targetTileRow","targetTileCol","Math","abs","randomMove","siblings","col","push","length","getSiblings","floor","random","generateTiles","rows","cols","y","Array","from","v","k","shuffleBoard","i","tilesState","atom","key","default","isCompleteState","selector","get","x","getIsComlete","sizeState","chips","sortedTilesState","sortedTiles","forEach","rowTiles","number","Board","useRecoilState","setTiles","size","className","width","height","viewBox","xmlns","xmlnsXlink","map","pos","tileName","onClick","transform","strokeWidth","alignmentBaseline","textAnchor","Congrats","audioRef","useRef","useEffect","current","play","src","Audio","ref","href","alt","SizeButton","direction","title","nextRows","max","nextCols","Controls","handleKeyDown","tile","keyCode","document","addEventListener","removeEventListener","App","isComplete","Helmet","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6ec4f5ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/win.71069831.ogg\";","export function clone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nexport function random(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function find(arr, n) {\n  const row = arr.findIndex(row => row.indexOf(n) > -1);\n  const col = arr[row].indexOf(n);\n\n  return [row, col];\n}\n\nexport function getSiblings(tiles, n) {\n  const siblings = [];\n  const [row, col] = find(tiles, n);\n  if (row > 0) siblings.push(tiles[row - 1][col]);\n  if (row < tiles.length - 1) siblings.push(tiles[row + 1][col]);\n  if (col > 0) siblings.push(tiles[row][col - 1]);\n  if (col < tiles[0].length - 1) siblings.push(tiles[row][col + 1]);\n  return siblings;\n}\n\nexport function move(tiles, targetTile) {\n  const [emptyTileRow, emptyTileCol] = find(tiles, 0);\n  const [targetTileRow, targetTileCol] = find(tiles, targetTile);\n\n  if (Math.abs(emptyTileRow - targetTileRow) + Math.abs(emptyTileCol - targetTileCol) === 1) {\n    tiles[emptyTileRow][emptyTileCol] = targetTile;\n    tiles[targetTileRow][targetTileCol] = 0;\n  }\n\n  return tiles;\n}\n\nexport function randomMove(tiles) {\n  return move(tiles, random(getSiblings(tiles, 0)));\n}\n\nexport function generateTiles(rows, cols) {\n  const tiles = [];\n  \n  for (let y = 0; y < rows; y++) {\n    tiles.push(Array.from({ length: cols }, (v, k) => k + cols * y + 1));\n  }\n\n  tiles[rows-1][cols-1] = 0;\n\n  return tiles;\n}\n\nexport function shuffleBoard(tiles) {\n  for (let i = 0; i < tiles.length * tiles[0].length ** 2; i++) {\n    randomMove(tiles);\n  }\n\n  return tiles;\n}\n\nexport function getIsComlete(tiles, rows = tiles.length, cols = tiles[0].length) {\n  for (let y = 0, i = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      i++;\n      if (tiles[y][x] === 0 && i === rows * cols) return true;\n      if (tiles[y][x] !== i) return false;\n    }\n  }\n\n  return true;\n}","import { atom, selector } from 'recoil';\nimport {\n  generateTiles, shuffleBoard, getIsComlete\n} from './helpers.js';\n\nexport const tilesState = atom({\n  key: 'tilesState',\n  default: shuffleBoard(generateTiles(4, 4)),\n});\n\nexport const isCompleteState = selector({\n  key: 'isCompleteState',\n  get: ({ get }) => getIsComlete(get(tilesState)),\n});\n\nexport const sizeState = selector({\n  key: 'sizeState',\n  get: ({ get }) => {\n    const tiles = get(tilesState);\n    const rows = tiles.length;\n    const cols = tiles[0].length;\n    const chips = rows * cols - 1;\n    return { rows, cols, chips };\n  },\n});\n\nexport const sortedTilesState = selector({\n  key: 'sortedTilesState',\n  get: ({ get }) => {\n    const tiles = get(tilesState);\n    const sortedTiles = [];\n\n    tiles.forEach((rowTiles, y) => {\n      rowTiles.forEach((number, x) => {\n        sortedTiles[number] = [y, x];\n      });\n    });\n\n    return sortedTiles;\n  },\n});","import React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { clone, move } from './helpers';\nimport { sortedTilesState, tilesState, sizeState } from './state';\n\nimport './Board.css';\n\nconst Board = () => {\n  const [tiles, setTiles] = useRecoilState(tilesState);\n  const [sortedTiles] = useRecoilState(sortedTilesState);\n  const [size] = useRecoilState(sizeState);\n\n  return (\n    <div className='board-wrapper'>\n      <svg\n        className=\"board\"\n        width=\"100%\"\n        height=\"100%\"\n        viewBox={`0 0 ${size.cols * 24} ${size.rows * 24}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      >\n        {sortedTiles.map((pos, tileName) => {\n          if (tileName === 0) return null;\n          return (\n            <g\n              className=\"tile\"\n              onClick={() => setTiles(move(clone(tiles), tileName))}\n              key={tileName} \n              transform={`translate(${pos[1] * 24 + 1}, ${pos[0] * 24 + 1})`}\n            >\n              <rect\n                height=\"22\"\n                width=\"22\"\n                strokeWidth=\"0\"\n                x=\"1\"\n                y=\"1\"\n              />\n              <text\n                x={12}\n                y={12}\n                alignmentBaseline=\"central\"\n                textAnchor=\"middle\"\n              >\n                {tileName}\n              </text>\n            </g>\n          );\n        })}\n      </svg>\n    </div>\n  )\n};\n\nexport default Board;","import React, { useEffect, useRef } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { clone, shuffleBoard } from './helpers';\nimport { tilesState } from './state';\nimport Audio from './win.ogg';\n\nimport './Congrats.css';\n\nconst Congrats = () => {\n  const audioRef = useRef();\n  useEffect(() => { audioRef.current.play(); }, []);\n  const [tiles, setTiles] = useRecoilState(tilesState);\n\n  return (\n    <div className=\"congrats\">\n      <div className=\"congrats-star\" />\n      <div className=\"congrats-header\">\n        You did it!\n      </div>\n      <audio src={Audio} ref={audioRef} />\n      <div className=\"congrats-controls\">\n        <a\n          href=\"#\"\n          alt=\"Play again!\"\n          onClick={() => setTiles(shuffleBoard(clone(tiles)))}\n        >\n          Play again!\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Congrats;","import React, { useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { clone, generateTiles, find, move, shuffleBoard } from './helpers';\nimport { sizeState, tilesState } from './state';\n\nimport './Controls.css';\n\nconst SizeButton = ({ rows = false, cols = false, direction }) => {\n  const [_, setTiles] = useRecoilState(tilesState);\n  const [size] = useRecoilState(sizeState);\n\n  const clickHandler = () => {\n    const nextRows = Math.max(2, size.rows + (rows ? direction : 0));\n    const nextCols = Math.max(2, size.cols + (cols ? direction : 0));\n    setTiles(shuffleBoard(generateTiles(nextRows, nextCols)));\n  };\n\n  return (\n    <button\n      className=\"btn btn-outline\"\n      title={`${direction > 0 ? 'More' : 'Less'} ${rows ? 'rows' : 'columns'}`}\n      onClick={clickHandler}\n    >\n      {direction > 0 ? '+' : '-'}\n    </button>\n  );\n};\n\nconst Controls = () => {\n  const [tiles, setTiles] = useRecoilState(tilesState);\n  const [size] = useRecoilState(sizeState);\n\n  const handleKeyDown = ({ keyCode }) => {\n    const [row, col] = find(tiles, 0);\n    let tile;\n\n    if (keyCode === 37 && (col < size.cols - 1)) { // LEFT\n      tile = tiles[row][col + 1];\n    } else if (keyCode === 38 && (row < size.rows - 1)) { // UP\n      tile = tiles[row + 1][col];\n    } else if (keyCode === 39 && col > 0) { // RIGHT\n      tile = tiles[row][col - 1];\n    } else if (keyCode === 40 && row > 0) { // DOWN\n      tile = tiles[row - 1][col];\n    }\n\n    if (tile) setTiles(move(clone(tiles), tile));\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => { document.removeEventListener('keydown', handleKeyDown); }\n  });\n    \n  return (\n    <div className=\"controls\">\n      <div className=\"rows-controls\">\n        Rows\n        <SizeButton rows direction={-1} />\n        <SizeButton rows direction={+1} />\n      </div>\n      <div className=\"cols-controls\">\n        Columns\n        <SizeButton cols direction={-1} />\n        <SizeButton cols direction={+1} />\n      </div>\n      <div className=\"aside-controls\">\n        <button\n          className=\"btn btn-shuffle\"\n          title=\"Shuffle\"\n          onClick={() => setTiles(shuffleBoard(clone(tiles)))}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default Controls;","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useRecoilState } from 'recoil';\n\nimport Board from './Board';\nimport Congrats from './Congrats';\nimport Controls from './Controls';\nimport { isCompleteState, sizeState } from './state';\n\nimport './App.css';\n\nconst App = () => {\n  const [isComplete] = useRecoilState(isCompleteState);\n  const [size] = useRecoilState(sizeState);\n\n  return (\n    <main>\n      <Helmet>\n        <title>\n          {`${size.chips}-puzzle`}\n        </title>\n      </Helmet>\n      {!isComplete && <Controls />}\n      {isComplete ? <Congrats /> : <Board />}\n    </main>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport App from './App';\n\nReactDOM.render(\n  <RecoilRoot>\n    <App /> \n  </RecoilRoot>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}