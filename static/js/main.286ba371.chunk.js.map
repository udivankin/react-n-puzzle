{"version":3,"sources":["win.ogg","helpers.js","state.js","Board.jsx","Congrats.jsx","Controls.jsx","Stats.jsx","App.jsx","index.js"],"names":["module","exports","clone","arr","JSON","parse","stringify","sequence","a","b","Array","from","length","Math","abs","v","k","random","floor","find","n","row","findIndex","indexOf","move","tiles","targetTile","emptyTileRow","emptyTileCol","targetTileRow","targetTileCol","moves","direction","forEach","col","randomMove","round","randomTile","filter","map","Boolean","generateTiles","rows","cols","y","push","shuffleBoard","i","getIsComlete","x","tilesState","atom","key","default","gameState","gameId","Symbol","isCompleteState","selector","get","sizeState","chips","sortedTilesState","sortedTiles","rowTiles","number","Board","useRecoilState","game","setGame","setTiles","size","handleMove","tile","nextTiles","movesTaken","handleKeyDown","keyCode","useEffect","document","addEventListener","removeEventListener","className","width","height","viewBox","xmlns","pos","tileName","onClick","transform","strokeWidth","fontSize","textAnchor","Congrats","audioRef","useRef","current","play","src","Audio","ref","href","alt","SizeButton","shuffle","nextRows","max","nextCols","cx","cy","fill","r","fillOpacity","stroke","d","fontWeight","Controls","Timer","useState","previousGameId","setPreviousGameId","seconds","setSeconds","timer","setInterval","s","clearInterval","h","c","String","padStart","join","getTime","Moves","Stats","App","isComplete","Helmet","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.286ba371.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/win.71069831.ogg\";","export function clone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nexport function sequence(a, b) {\n  return Array.from({ length: Math.abs(a - b) }, (v, k) => a + (k * (a > b ? -1 : 1)));\n}\n\nexport function random(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function find(arr, n) {\n  const row = arr.findIndex(row => row.indexOf(n) > -1);\n  const col = arr[row].indexOf(n);\n\n  return [row, col];\n}\n\nexport function move(tiles, targetTile) {\n  const [emptyTileRow, emptyTileCol] = find(tiles, 0);\n  const [targetTileRow, targetTileCol] = find(tiles, targetTile);\n  let moves = 0;\n\n  if (emptyTileRow !== targetTileRow && emptyTileCol !== targetTileCol) return [tiles, moves];\n\n  if (emptyTileRow === targetTileRow) {\n    const direction = emptyTileCol < targetTileCol ? 1 : -1;\n    sequence(emptyTileCol, targetTileCol).forEach((col) => {\n      [tiles[emptyTileRow][col], tiles[emptyTileRow][col + direction]] = [tiles[emptyTileRow][col + direction], tiles[emptyTileRow][col]];\n      moves += 1;\n    });\n  } else {\n    const direction = emptyTileRow < targetTileRow ? 1 : -1;\n    sequence(emptyTileRow, targetTileRow).forEach((row) => {\n      [tiles[row][emptyTileCol], tiles[row + direction][emptyTileCol]] = [tiles[row + direction][emptyTileCol], tiles[row][emptyTileCol]];\n      moves += 1;\n    });\n  }\n\n  return [tiles, moves];\n}\n\nexport function randomMove(tiles, direction = Math.round(Math.random())) {\n  const [emptyTileRow, emptyTileCol] = find(tiles, 0);\n  let randomTile = direction === 0\n    ? random(tiles[emptyTileRow].filter(n => n !== 0))\n    : random(tiles.map((row) => row[emptyTileCol]).filter(Boolean));\n\n  return move(tiles, randomTile);\n}\n\nexport function generateTiles(rows, cols) {\n  const tiles = [];\n  \n  for (let y = 0; y < rows; y++) {\n    tiles.push(Array.from({ length: cols }, (v, k) => k + cols * y + 1));\n  }\n\n  tiles[rows-1][cols-1] = 0;\n\n  return tiles;\n}\n\nexport function shuffleBoard(tiles) {\n  for (let i = 0; i < tiles.length * tiles[0].length ** 2; i++) {\n    randomMove(tiles);\n  }\n\n  return getIsComlete(tiles) ? randomMove(tiles)[0] : tiles;\n}\n\nexport function getIsComlete(tiles, rows = tiles.length, cols = tiles[0].length) {\n  for (let y = 0, i = 0; y < rows; y++) {\n    for (let x = 0; x < cols; x++) {\n      i++;\n      if (tiles[y][x] === 0 && i === rows * cols) return true;\n      if (tiles[y][x] !== i) return false;\n    }\n  }\n\n  return true;\n}\n\nexport const getTime = (seconds) => {\n  const h = Math.floor(seconds / 3600);\n  const m = Math.floor((seconds - h * 3600) / 60);\n  const s = seconds % 60;\n  return [h, m, s].map(c => String(c).padStart(2, '0')).join(':');\n}\n","import { atom, selector } from 'recoil';\nimport {\n  generateTiles, shuffleBoard, getIsComlete\n} from './helpers.js';\n\nexport const tilesState = atom({\n  key: 'tilesState',\n  default: shuffleBoard(generateTiles(4, 4)),\n});\n\nexport const gameState = atom({\n  key: 'gameState',\n  default: {\n    moves: 0,\n    gameId: Symbol('gameState'),\n  },\n});\n\nexport const isCompleteState = selector({\n  key: 'isCompleteState',\n  get: ({ get }) => getIsComlete(get(tilesState)),\n});\n\nexport const sizeState = selector({\n  key: 'sizeState',\n  get: ({ get }) => {\n    const tiles = get(tilesState);\n    const rows = tiles.length;\n    const cols = tiles[0].length;\n    const chips = rows * cols - 1;\n    return { rows, cols, chips };\n  },\n});\n\nexport const sortedTilesState = selector({\n  key: 'sortedTilesState',\n  get: ({ get }) => {\n    const tiles = get(tilesState);\n    const sortedTiles = [];\n\n    tiles.forEach((rowTiles, y) => {\n      rowTiles.forEach((number, x) => {\n        sortedTiles[number] = [y, x];\n      });\n    });\n\n    return sortedTiles;\n  },\n});","import React, { useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { clone, find, move } from './helpers';\nimport { sortedTilesState, tilesState, sizeState, gameState } from './state';\n\nimport './Board.css';\n\nconst Board = () => {\n  const [game, setGame] = useRecoilState(gameState);\n  const [tiles, setTiles] = useRecoilState(tilesState);\n  const [sortedTiles] = useRecoilState(sortedTilesState);\n  const [size] = useRecoilState(sizeState);\n\n  const handleMove = (tile) => {\n    const [nextTiles, movesTaken] = move(clone(tiles), tile);\n    setGame({ ...game, moves: game.moves + movesTaken });\n    setTiles(nextTiles);\n  }\n\n  const handleKeyDown = ({ keyCode }) => {\n    const [row, col] = find(tiles, 0);\n    let tile;\n\n    if (keyCode === 37 && (col < size.cols - 1)) { // LEFT\n      tile = tiles[row][col + 1];\n    } else if (keyCode === 38 && (row < size.rows - 1)) { // UP\n      tile = tiles[row + 1][col];\n    } else if (keyCode === 39 && col > 0) { // RIGHT\n      tile = tiles[row][col - 1];\n    } else if (keyCode === 40 && row > 0) { // DOWN\n      tile = tiles[row - 1][col];\n    }\n\n    if (tile) handleMove(tile);\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => { document.removeEventListener('keydown', handleKeyDown); }\n  });\n\n  return (\n    <div className='board-wrapper'>\n      <svg\n        className=\"board\"\n        width=\"100%\"\n        height=\"100%\"\n        viewBox={`0 0 ${size.cols * 24} ${size.rows * 24}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        {sortedTiles.map((pos, tileName) => {\n          if (tileName === 0) return null;\n          return (\n            <g\n              className=\"tile\"\n              onClick={() => handleMove(tileName)}\n              key={tileName} \n              transform={`translate(${pos[1] * 24}, ${pos[0] * 24})`}\n            >\n              <rect\n                height=\"22\"\n                width=\"22\"\n                strokeWidth=\"0\"\n                x=\"1\"\n                y=\"1\"\n              />\n              <text\n                fontSize=\"12\"\n                transform={`translate(12, 16)`}\n                textAnchor=\"middle\"\n              >\n                {tileName}\n              </text>\n            </g>\n          );\n        })}\n      </svg>\n    </div>\n  )\n};\n\nexport default Board;","import React, { useEffect, useRef } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { clone, shuffleBoard } from './helpers';\nimport { gameState, tilesState } from './state';\nimport Audio from './win.ogg';\n\nimport './Congrats.css';\n\nconst Congrats = () => {\n  const audioRef = useRef();\n  useEffect(() => { audioRef.current.play(); }, []);\n  const [tiles, setTiles] = useRecoilState(tilesState);\n  const [, setGame] = useRecoilState(gameState);\n\n  const handleClick = () => {\n    setTiles(shuffleBoard(clone(tiles)));\n    setGame({ moves: 0, gameId: Symbol('gameId')});\n  };\n\n  return (\n    <div className=\"congrats\">\n      <div className=\"congrats-star\" />\n      <div className=\"congrats-header\">\n        You did it!\n      </div>\n      <audio src={Audio} ref={audioRef} />\n      <div className=\"congrats-controls\">\n        <a\n          href=\"#\"\n          alt=\"Play again!\"\n          onClick={handleClick}\n        >\n          Play again!\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Congrats;","import React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { generateTiles, shuffleBoard } from './helpers';\nimport { gameState, sizeState, tilesState } from './state';\n\nimport './Controls.css';\n\nconst SizeButton = ({ rows = false, cols = false, direction, shuffle }) => {\n  const [, setTiles] = useRecoilState(tilesState);\n  const [size] = useRecoilState(sizeState);\n  const [, setGame] = useRecoilState(gameState);\n\n  const clickHandler = () => {\n    const nextRows = Math.max(2, size.rows + (rows ? direction : 0));\n    const nextCols = Math.max(2, size.cols + (cols ? direction : 0));\n    setTiles(shuffleBoard(generateTiles(nextRows, nextCols)));\n    setGame({ moves: 0, gameId: Symbol('gameId')});\n  };\n\n  return (\n    <svg className=\"btn\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" onClick={clickHandler}>\n      {shuffle\n        ? <circle cx=\"12\" cy=\"12\" fill=\"#0dad8a\" r=\"11\"/>\n        : <circle cx=\"12\" cy=\"12\" fill=\"#fff\" fillOpacity=\"0.1\" r=\"11\" strokeWidth=\"0.5\" stroke=\"#fff\"/>\n      }\n      {shuffle\n        ? (\n          <g fill=\"#fff\">\n            <path d=\"M6.59 9.49h2.43c.51 0 .97.27 1.29.68.22-.4.5-.8.82-1.15a2.95 2.95 0 00-2.11-.93H6.59a.7.7 0 100 1.4zm5.34 2.15c.38-1.15 1.56-2.15 2.53-2.15h1.28l-.9.89a.7.7 0 10.97.98L18.4 8.8l-2.57-2.57a.7.7 0 10-.98.98l.9.9h-1.28c-1.58 0-3.27 1.36-3.85 3.1l-.33.99c-.45 1.33-1.44 2.15-1.95 2.15H6.58a.7.7 0 100 1.4h1.75c1.28 0 2.69-1.34 3.28-3.12l.32-.98z\"/>\n            <path d=\"M15 12.47a.7.7 0 000 .98l.9.9h-1.63a2 2 0 01-1.88-1.47 6.36 6.36 0 01-.75 1.52 3.3 3.3 0 002.63 1.34h1.62l-.9.89a.7.7 0 10.98.98l2.58-2.57-2.57-2.57a.7.7 0 00-.99 0z\"/>\n          </g>\n        )\n        : (\n          <text textAnchor=\"middle\" fontSize=\"9\" fontWeight=\"bold\" transform={`translate(12, 15.5)`} fill=\"#fff\">\n            {direction > 0 ? '+' : '-'}\n          </text>\n        )\n      }\n    </svg>\n  );\n};\n\nconst Controls = () => {\n  return (\n    <div className=\"controls\">\n      <div className=\"rows-controls\">\n        Rows\n        <SizeButton rows direction={-1} />\n        <SizeButton rows direction={+1} />\n      </div>\n      <div className=\"cols-controls\">\n        Columns\n        <SizeButton cols direction={-1} />\n        <SizeButton cols direction={+1} />\n      </div>\n      <div className=\"aside-controls\">\n        <SizeButton shuffle />\n      </div>\n    </div>\n  );\n}\n\nexport default Controls;","import React, { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { gameState } from './state';\n\nimport './Stats.css';\nimport { getTime } from './helpers';\n\nconst Timer = () => {\n  const [game] = useRecoilState(gameState);\n  const [previousGameId, setPreviousGameId] = useState(game.gameId);\n  const [seconds, setSeconds] = useState(0);\n\n  if (game.gameId !== previousGameId) {\n    setSeconds(0);\n    setPreviousGameId(game.gameId);\n  }\n\n  useEffect(() => {\n    let timer = setInterval(() => {\n      setSeconds(s => s + 1);\n    }, 1000)\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  \n  return (\n    <span>Time: {getTime(seconds)}</span>\n  );\n}\n\nconst Moves = () => {\n  const [game] = useRecoilState(gameState);\n  return <span>Moves: {game.moves}</span>;\n}\n\nconst Stats = () => {\n  return (\n    <div className=\"stats\">\n      <Moves />\n      <Timer />\n    </div>\n  );\n}\n\nexport default Stats;","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useRecoilState } from 'recoil';\n\nimport Board from './Board';\nimport Congrats from './Congrats';\nimport Controls from './Controls';\nimport Stats from './Stats';\nimport { isCompleteState, sizeState } from './state';\n\nimport './App.css';\n\nconst App = () => {\n  const [isComplete] = useRecoilState(isCompleteState);\n  const [size] = useRecoilState(sizeState);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {`${size.chips}-puzzle`}\n        </title>\n      </Helmet>\n      {!isComplete && <Controls />}\n      {isComplete ? <Congrats /> : <Board />}\n      {!isComplete && <Stats />}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from 'recoil';\nimport App from './App';\n\nReactDOM.render(\n  <RecoilRoot>\n    <App /> \n  </RecoilRoot>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}